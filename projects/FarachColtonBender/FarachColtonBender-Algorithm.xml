<?xml version="1.0" encoding="UTF-8"?>

<algorithm>
	<variable 
		description	= "Экземпляр апплета"
		name		= "visualizer"
		type		= "FarachColtonBenderVisualizer"
		value		= "null"
	/>

	<variable
		description	= "Основной массив"
		name		= "array"
		type		= "int[]"
		value		= "new int[]{3, 8, 10, 4, 23}"
	/>

	<variable
		description	= "Количество обработанных вершин в построении декартова дерева"
		name		= "verticesPassed"
		type		= "int"
		value		= "0"
	/>	

	<variable
		description	= "Стек"
		name		= "stack"
		type		= "int[]"
		value		= "new int[5]"
	/>

	<variable
		description	= "Ещё стек"
		name		= "stack2"
		type		= "int[]"
		value		= "new int[5]"
	/>

	<variable
		description	= "Размер стека. Внезапно"
		name		= "stackSize"
		type		= "int"
		value		= "0"
	/>

	<variable
		description	= "Счётчик цикла"
		name		= "i"
		type		= "int"
		value		= "0"
	/>

	<variable
		description	= "Левый сын в декартовом дереве"
		name		= "leftSon"
		type		= "int[]"
		value		= "new int[5]"
	/>

	<variable
		description	= "Правый сын в декартовом дереве"
		name		= "rightSon"
		type		= "int[]"
		value		= "new int[5]"
	/>

	<variable
		description	= "oldStackSize"
		name		= "oldStackSize"
		type		= "int"
		value		= "-1"
	/>

	<variable
		desctription	= "Врéменная переменная"
		name		= "tmp"
		type		= "int"
		value		= "0"
	/>

	<variable
		description	= "Номер вершины в DFS"
		name		= "index"
		type		= "int[]"
		value		= "new int[11]"
	/>
	
	<variable
		description	= "Глубина в DFS"
		name		= "depth"
		type		= "int[]"
		value		= "new int[11]"
	/>

	<variable
		description	= "Корень дерева"
		name		= "root"
		type		= "int"
		value		= "-1"
	/>

	<variable
		description	= "Позиция в массиве обхода DFS"
		name		= "pos"
		type		= "int"
		value		= "-1"
	/>

	<variable
		description	= "Сыновей пройдено"
		name	= "passed"
		type	= "int[]"
		value	= "null"
	/>

	<variable
		description	= "Первое вхождение"
		name	= "first"
		type	= "int[]"
		value	= "null"
	/>

	<variable
		description	= "Построено дерево, сделан обход"
		name	= "stage1"
		type	= "boolean"
		value	= "false"
	/>

	<variable
		description	= "Размер куска"
		name	= "pieceSize"
		type	= "int"
		value	= "3"
	/>

	<variable
		description	= "Максиммумы на кусочках"
		name	= "maximums"
		type	= "int[]"
		value	= "null"
	/>

	<variable
		description	= "Переменная цикла — 2"
		name	= "j"
		type	= "int"
		value	= "-1"
	/>

	<variable
		description	= "Собственно, таблица"
		name	= "table"
		type	= "int[][]"
		value	= "null"
	/>
	
	<variable
		description	= "±1-таблица"
		name	= "table2"
		type	= "int[][]"
		value	= "null"
	/>

	<variable
		description	= "Няшки построены"
		name	= "ready"
		type	= "boolean"
		value	= "false"
	/>
	
	<variable 
		description	= "Левая граница поиска" 
		name	= "left" 
		type	= "int"	
		value	= "-1"
	/>
	
	<variable
		description	= "Правая граница поиска"
		name	= "right"
		type	= "int"
		value	= "-1"
	/>
	
	<variable 
		description	= "Левая граница поиска — 2" 
		name	= "left2"
		type	= "int"	
		value	= "-1"
	/>
	
	<variable
		description	= "Правая граница поиска ­— 2"
		name	= "right2"
		type	= "int"
		value	= "-1"
	/>
	
	<variable
		description	= "Левый кусок"
		name	= "leftPiece"
		type	= "int"
		value	= "-1"
	/>
	
	<variable
		description	= "Правый кусок"
		name	= "rightPiece"
		type	= "int"
		value	= "-1"
	/>
	
	<variable
		description	= "Первая часть ответа"
		name	= "ans1"
		type	= "int"
		value	= "-1"
	/>
	
	<variable
		description	= "Вторая часть ответа"
		name	= "ans2"
		type	= "int"
		value	= "-1"
	/>
	
	<variable
		description	= "Третья часть ответа"
		name	= "ans3"
		type	= "int"
		value	= "-1"
	/>
	
	<variable
		description	= "Первый индекс ответа"
		name	= "index1"
		type	= "int"
		value	= "-1"
	/>
	
	<variable
		description	= "Второй индекс ответа"
		name	= "index2"
		type	= "int"
		value	= "-1"
	/>
	
	<variable
		description	= "Третий часть ответа"
		name	= "index3"
		type	= "int"
		value	= "-1"
	/>
	
	<variable
		description	= "Ответ на задачу"
		name	= "ans"
		type	= "int"
		value	= "-1"
	/>
	
	<variable
		description	= "Логарифм"
		name	= "log2"
		type	= "int"
		value	= "-1"
	/>
	
	<toString>
		return "";
	</toString>

	<auto id="Main" description="Ищет максимум на отрезке в массиве">
        <start
            comment-ru	= "Инициализируем массив"
            comment-en	= "There is a array on display"
        >
			<draw>
				@visualizer.clear();
				@visualizer.drawMainArray();
			</draw>
        </start>
		<if
			id	= "build"
			description	= "build all auxillary structures"
			test	= "!@ready"
			level	= "-1"
		>
			<then>
					<step
						id		= "Begin"
						description	= "Start of cycle"
						comment-ru	= "Построим декартово дерево из пар {0}. Воспользуемся алгоритмом построения декартова дерева с отсоритированными по x ключами за линейное время. Для этого будем хранить стек лежащих на правом пути вершин. При добавлении очередного элемента выкидываем из стека элементы с бóльшими ключами y, меньшие , после чего к вершине стека справа подвесим добавляемый элемент."
						comment-args	= "FarachColtonBenderVisualizer.treeAsString(@array)"
						level	= "1"
					>
						<action>
							@i @= 0;
							@stack @= new int[@array.length];
							@stackSize @= 0;
						</action>
					</step>

			<!-- ***************************************************************** -->
			<!-- ********************** Построение дерева ************************ -->
			<!-- ***************************************************************** -->

				<while
					id		= "CartesianTreeLoop"
					description	= "Cycle over elements to build cartesian tree"
					test		= "@i &lt; @array.length"
					true-comment-ru	= "Добавим в дерево справа элемент {0}. Выкинем все меньшие {0} элементы."
					false-comment-ru	= "Дерево построено!"
					comment-args	= "new Integer((@i &lt; @array.length) ? (@array[@i]) : 0)"
				>

					<step
						id	= "BackupStackSize"
						description	= "Backup stack size"
						level	= "-1"			
					>
					<action>
						@oldStackSize @= @stackSize;
					</action>
					</step>

					<while
						id	= "dropSmallElements"
						description	= "Drop all elements above a[i]"
						test	= "@stackSize &gt; 0 &amp;&amp; @array[@i] > @array[@stack[@stackSize - 1]]"
						true-comment-ru	= "{0} &lt; {1}. Выкидываем {0}."
						false-comment-ru	= "Останавливаемся."
						comment-args	= "new Integer(@stackSize == 0 ? 0: (@array[@stack[@stackSize - 1]])), new Integer(@array[@i])"
					>
						<step
							id	= "decrementStackSize"
							description	= "decrementStackSize"
						>
						<action>
							@stackSize @= @stackSize - 1;
						</action>
						<draw>
							@visualizer.drawCartesianTree(@i, @stackSize);
						</draw>
						</step>
					</while>

					<if
						id		= "checkHasRightSon"
						description	= "check for new right son"
						test		= "@stackSize != 0"
						true-comment-ru	= "Чпок!"
						false-comment-ru	= "Пыщь!"
						level		= "-1"
					>
					<then>
						<step
							id	= "rightSonAssignment"
							description	= "right son assignment"
							level = "-1"
						>
						<action>
							@rightSon[@stack[@stackSize - 1]] @= @i;
						</action>
						</step>
					</then>
					<else>
					</else>
					</if>

					<if
						id		= "checkHasLeftSon"
						description	= "check for new left son"
						test		= "@oldStackSize != @stackSize"
						true-comment-ru	= "Ололо!"
						false-comment-ru	= "Атата!"
						level		= "-1"
					>
					<then>
						<step
							id	= "leftSonAssignment"
							description	= "left son assignment"
							level	= "-1"
						>
						<action>
							@leftSon[@i] @= @stack[@stackSize];
						</action>
						</step>
					</then>
					<else>
					</else>
					</if>

					<step
						id		= "pushElementToStack"
						description	= "push element to stack"
						comment-ru	= "Добавим элемент {0} в стек"
						comment-args	= "new Integer(@array[@i])"
					>
					<action>
						@stack[@stackSize] @= @i;
						@stackSize @= @stackSize + 1;
					</action>
					<draw>
						@visualizer.drawCartesianTree(@i + 1, @stackSize);
					</draw>
					</step>

					<step
						id		= "CycleStep"
						description	= "Cycle step"
						level		= "-1"
					>
					<action>
						@i @= @i + 1;
					</action>
					</step>

				</while>

				<step
					id	= "TreeBuilt"
					desription	= "Now we have the tree"
					comment-ru	= "Теперь у нас есть построеное дерево"
				>
				<draw>
					@visualizer.drawCartesianTree(@array.length, 0);
				</draw>
				</step>

			<!-- ******************************************************************** -->
			<!-- *************************** Обход дерева *************************** -->
			<!-- ******************************************************************** -->
				
				<step
					id	= "DFSComment"
					description	= "DFSCommnet"
					comment-ru	= "Теперь обойдём дерево обходом в глубину. На каждом шаге будем запоминать своё местоположение и глубину"
					level	= "1"
				>
				<action>
					@stackSize @= 1;
					@root @= @stack[0];
					@stack @= new int[2 * @array.length + 1];
					@stack[0] @= @root;
					@index[0] @= @root;
					@depth[0] @= 1;
					@pos @= 1;
				</action>
				<draw>
					@visualizer.drawCellsForDFS(0, -1);
				</draw>
				</step>

				<step
					id	= "ololo2"
					description	= "ololo2"
				>
					<action>
					</action>
					<draw>
						@visualizer.drawCellsForDFS(1, @root);
					</draw>
				</step>

				<while
					id	= "DFS"
					description	= "Traversal over tree"
					test		= "@stackSize &gt; 0"
					true-comment-ru	= "Обрабатывыем вершину {0}({1})"
					false-comment-ru	= "Обход закончен"
					comment-args	= "new Integer(1 + (@stackSize == 0 ? 0 : @stack[@stackSize - 1])), new Integer(@array[@stackSize == 0 ? 0 : @stack[@stackSize - 1]])"
				>
				
					<if
						id	= "GoLeft"
						description	= "Try to go left"
						test	= "@passed[@stack[@stackSize - 1]] == 0 &amp;&amp; @leftSon[@stack[@stackSize - 1]] != -1"
						true-comment-ru	= "Идём влево"
						false-comment-ru	= "Не идём влево"
						level	= "-1"
					>
						<then>
							<step
								id	= "GoGoLeft"
								description	= "go left"
								comment-ru	= "Идём влево"
								level = "0"
							>
								<action>
									@stack[@stackSize] @= @leftSon[@stack[@stackSize - 1]];
									@passed[@stack[@stackSize - 1]] @= @passed[@stack[@stackSize - 1]] + 1;
									@depth[@pos] @= @depth[@pos - 1] + 1;
									@index[@pos] @= @leftSon[@stack[@stackSize - 1]];
									@pos @= @pos + 1;
									@stackSize @= @stackSize + 1;
								</action>
								<draw>
									@visualizer.drawCellsForDFS(@pos, @stack[@stackSize - 1]);
								</draw>
							</step>
						</then>
						<else>
							<if
								id	= "advancePointer"
								description	= "advancePointer"
								level	= "-1"
								test	= "@leftSon[@stack[@stackSize - 1]] == -1"					
							> 
								<then>
									<step
										id	= "advancePointer1"
										description	= "advancePointer1"
										level	= "-1"							
									>
										<action>
											@passed[@stack[@stackSize - 1]] @= @passed[@stack[@stackSize - 1]] + 1;
										</action>
									</step>
								</then>
								<else>
								</else>				
							</if>
							
							<if
								id	= "GoRight"
								description	= "Try to go right"
								test	= "@passed[@stack[@stackSize - 1]] == 1 &amp;&amp; @rightSon[@stack[@stackSize - 1]] != -1"
								level	= "-1"
							>
								<then>
									<step
										id	= "GoGoRight"
										description	= "GoGoRight"
										comment-ru	= "Идём вправо"
									>
										<action>
											@stack[@stackSize] @= @rightSon[@stack[@stackSize - 1]];
											@passed[@stack[@stackSize - 1]] @= @passed[@stack[@stackSize - 1]] + 1;
											@depth[@pos] @= @depth[@pos - 1] + 1;
											@index[@pos] @= @rightSon[@stack[@stackSize - 1]];
											@pos @= @pos + 1;
											@stackSize @= @stackSize + 1;
										</action>
										<draw>
											@visualizer.drawCellsForDFS(@pos, @stack[@stackSize - 1]);
										</draw>
									</step>
								</then>
								<else>
									<if
										id	= "goUp"
										description	= "check if we are not root"
										test	= "@stackSize &gt; 1"
										level	= "-1"
									>
										<then>
											<step
												id	= "goUp"
												description	= "processing of vertex finished"
												comment-ru	= "Поднимаемся наверх"
												level	= "0"
											>
												<action>
													@index[@pos] @= @stack[@stackSize - 2];
													@depth[@pos] @= @depth[@pos - 1] - 1;
													@pos @= @pos + 1;
													@stackSize @= @stackSize - 1;
												</action>
												<draw>
													@visualizer.drawCellsForDFS(@pos, @stack[@stackSize - 1]);
												</draw>
											</step>
										</then>
										<else>
											<step
												id	= "endOfDFS"
												description	= "the end of DFS"
												level	= "-1"
											>
												<action>
													@stackSize @= @stackSize - 1;
												</action>
											</step>
										</else>
									</if>
								</else>
							</if>
						</else>
					</if>
				</while>

				<!-- **************************************************************** -->
				<!-- ******************** Подготовка к запросам ********************* -->
				<!-- **************************************************************** -->

				<step
					id	= "traversalFinished"
					description	= "cleanup after traversal"
					comment-ru	= "Отныне дерево нам больше не понадобится"
					level	= "1"
				>
					<action>
						@stage1 @= true;
					</action>
					<draw>
						@visualizer.drawCellsForDFS(@pos, -1);
						@visualizer.drawCartesianTree(0, 0);
						@visualizer.redrawIndex();
					</draw>
				</step>

				<step
					id	= "ololo3"
					description	= "ololo3"
					level	 = "-1"
				>
					<action>
						@i @= 0;
					</action>
				</step>

				<while
					id	= "searchFirstOccurence"
					description	= "search for first occurence of number in index"
					test	= "@i &lt; 2 * @array.length - 1"
					true-comment-ru	= "Смотрим элемент {0}"
					false-comment-ru	= "Первое вхождение найдено"
					comment-args	= "new Integer((@i == 2 * @array.length - 1 ? 0 : @index[@i]) + 1)"
					level	= "-1"
				>
					<if
						id	= "checkIfNotUsed"
						descrption	= "check if this cell is used first time"
						test	= "@first[@index[@i]] == -1"
						level	= "-1"
					>
						<then>
							<step
								id	= "newElementFound"
								description	= "First occurence of index[i] found"
								comment-ru	= "Первое вхождение элемента {0}"
								comment-args	= "new Integer(@index[@i] + 1)"
							>
								<action>
									@first[@index[@i]] @= @i;
								</action>
								<draw>
									@visualizer.redrawIndex();
								</draw>
							</step>
						</then>
						<else>
							<step
								id	= "notNewElementFound"
								description	= "index[i] already was used"
								comment-ru	= "Уже не первое вхождение {0}"
								comment-args	= "new Integer(@index[@i] + 1)"
								level	= "-1"
							>
								<action>
								</action>
								<draw>						
								</draw>
							</step>
						</else>
					</if>
					
					<step
						id	= "incrementLoopVariable2"
						description	= "increment loop variable"
						level	= "-1"
					>
						<action>
							@i @= @i + 1;
						</action>
						<draw>
						</draw>
					</step>
				</while>

				<!-- ***************************************************************** -->
				<!-- **************** Разбиение на куски ***************************** --> 
				<!-- ***************************************************************** -->
				
				<step
					id	= "splittingIntoPieces1"
					description	= "splitting depth into pieces"
					comment-ru	= "Теперь разобъём массивы на куски размера log_2(2 * n - 1) / 2. В данном случае положим размер куска равным 3. На каждом куске найдём максимум и на этих максимумах построим разреженную таблицу"
					level	= "1"
				>
					<action>
						@i @= 0;
					</action>
					<draw>
						@visualizer.drawMaximums(0);
						@visualizer.drawDepth(-1);
						@visualizer.redrawIndex();
					</draw>
				</step>

				<step
					id	= "ololo4"
					description	= "ololo4"
					comment-ru	= "начнём, пожалуй"
				>
					<action>
					</action>
					<draw>
						@visualizer.drawDepth(0);			
					</draw>
				</step>

				<while
					id	= "buildArrayForSparseTable"
					description	= "build array for sparce table"
					true-comment-ru	= "Считаем максимум на {0}-м куске"
					false-comment-ru	= "Максимумы найдены"
					test	= "@i &lt; @maximums.length"
					comment-args	= "new Integer(@i + 1)"
				>
					<step
						id	= "loopVariableInit3"
						description	= "initialization of j"
						level	= "-1"
					>
						<action>
							@j @= 0;
						</action>
					</step>
					
					<while
						id	= "findMaximumInPiece"
						description	= "find maximum in piece"
						test	= "@j &lt; @pieceSize &amp;&amp; @i * @pieceSize + @j &lt; @depth.length"
						level	= "-1"
					>
						<if
							id	= "checkIfBiggerThanCurrentMaximum"
							description	= "ололошеньки"
							test	= "@maximums[@i] &gt; @depth[@i * @pieceSize + @j]"
							level	= "-1"
						>
							<then>
								<step
									id	= "improveMaximum"
									description	= "new maximum found"
									comment-ru	= "Уря! Новый максимум! {0} &gt; {1}"
									comment-args	= "new Integer(@depth[@i * @pieceSize + @j]), new Integer(@maximums[@i])"
								>
									<action>
										@maximums[@i] @= @depth[@i * @pieceSize + @j];
									</action>
									<draw>
										@visualizer.drawMaximums(@i + 1);
									</draw>
								</step>
							</then>
							<else>					
							</else>
						</if>
					
						<step
							id	= "advanceIterator"
							description	= "increment j"
							comment-ru	= "Переходим к следующему элементу…"
						>
							<action>
								@j @= @j + 1;
							</action>
							<draw>
								@visualizer.drawDepth(@i * @pieceSize + @j);
							</draw>
						</step>
					</while>
					
					<step
						id	= "advanceIteratorI"
						descriptiojn	= "increment i"
						level	= "-1"
					>
						<action>
							@i @= @i + 1;
						</action>
					</step>
				</while>

				<!-- ****************************************************************** -->
				<!-- ***************** Построение разреженной таблицы ***************** -->
				<!-- ****************************************************************** -->
				
				<step
					id	= "maximumsFound"
					description	= "maximums found"
					comment-ru	= "Максимумы найдены! Теперь построим на них разреженную таблицу (sparse table). В i-й строке, j-й клетке будет находиться максимальный среди элементов с j-го по j + 2^i"
					level	= "1"
				>
					<action>
						@i @= 1;
					</action>
					<draw>
						@visualizer.drawDepth(-1);
						@visualizer.drawTable(0, 0, -1, -1, -1, -1);
					</draw>
				</step>

				<while
					id	= "rowInSparseTable"
					description	= "row in sparse table"
					test	= "(1 &lt;&lt; @i) &lt;= @maximums.length"
					level	= "-1"		
				>
					<step
						id	= "initLoopVariable3"
						description	= "init loop variable"
						level	= "-1"
					>
						<action>
							@j @= 0;
						</action>
					</step>
					
					<while
						id	= "columnInSparseTable"
						description	= "column in sparse table"	
						test	= "(@j + (1 &lt;&lt; @i)) &lt;= @maximums.length"
						level	= "-1"
					>

						<step
							id	= "newVarInSparseTable"
							description	= "compute next variable in sparse table"
							comment-ru	= "Посчитаем очередное значение: t[{0}][{1}] = max(t[{2}][{1}] = {3}, t[{2}][{4}] = {5})"
							comment-args	= "new Integer(@i), new Integer(@j + 1), new Integer(@i - 1), new Integer(@table[@i - 1][@j]), new Integer(@j + (1 &lt;&lt; (@i - 1))), new Integer(@table[@i - 1][@j + (1 &lt;&lt; (@i - 1))])"
						>
							<action>
							</action>
						</step>
						
						<if 
							id	= "ololo5"
							description	= "ololo5"
							test	= "@table[@i - 1][@j] &gt; @table[@i - 1][@j + (1 &lt;&lt; (@i - 1))]"
							true-comment-ru	= "Лево"
							false-comment-ru	= "Право"
							level	= "-1"
						>
							<then>
								<step
									id	= "ololo6"
									description	= "ololo6"
									comment-ru	= "Обрабатываем очередной элемент"
								>
									<action>
										@table[@i][@j] @= @table[@i - 1][@j + (1 &lt;&lt; (@i - 1))];
									</action>
									<draw>
										@visualizer.drawTable(@i + 1, @j + 1, @i - 1, @j + (1 &lt;&lt; (@i - 1)), @i - 1, @j);
									</draw>
								</step>
							</then>
							<else>
								<step
									id	= "ololo7"
									description	= "ololo7"
									comment-ru	= "Обрабатываем очередной элемент"
								>
									<action>
										@table[@i][@j] @= @table[@i - 1][@j];
									</action>
									<draw>
										@visualizer.drawTable(@i + 1, @j + 1, @i - 1, @j, @i - 1, @j + (1 &lt;&lt; (@i - 1)));
									</draw>
								</step>
							</else>
						</if>

						<step
							id	= "ololo8"
							description	= "ololo8"
							level	= "-1"
						>
							<action>
								@j @= @j + 1;
							</action>
						</step>
						
					</while>
					
					<step
						id	= "ololo9"
						description	= "ololo9"
						level	= "-1"			
					>
						<action>
							@i @= @i + 1;
						</action>
					</step>		
				</while>
					
				<!-- ************************************************************** --> 
				<!-- ***************** Вспомогательные массивы ******************** -->
				<!-- ************************************************************** -->
					
				<step
					id	 = "ololo10"
					description	= "ololo10"
					comment-ru	= "Sparse table построена! Теперь для каждого кусочка заметим, что соседние элементы в нём отличаются на 1. Значит, ему соответствует двоичный вектор. Для всех таких двоичных векторово псчитаем максимумы на всех подстроках. Также, для каждого блока нужно хранить первый его элемент"
					level	= "1"
				>
					<action>
						@i @= 0;
					</action>
					<draw>
						@visualizer.drawTable(@maximums.length, @maximums.length, -1, -1, -1, -1);
						@visualizer.drawTable2(0, 0);
					</draw>
				</step>
				
				<while
					id	= "buildAdditionalArrays"
					description	= "ololo11"
					test	= "@i &lt; @maximums.length"
					level	= "-1"
				>
					<step
						id	= "ololo12"
						description	= "ololo12"
						level	= "-1"			
					>
						<action>
							@j @= 0;
							@table2[@i][0] @= @depth[@i * @pieceSize + @j];
						</action>
					</step>
					
					<while
						id	= "ololo13"
						description	= "ololo13"
						test	= "@j &lt; @pieceSize - 1 &amp;&amp; @i * @pieceSize + @j &lt; @depth.length"
						level	= "-1"
					>
						<step
							id	= "ololo14"
							description	= "ololo14"
							comment-ru	= "Заполним очередную ячейку"		
						>
							<action>
								@table2[@i][@j + 1] @= @depth[@i * @pieceSize + @j + 1] - @depth[@i * @pieceSize + @j];
								@j @= @j + 1;
							</action>
							<draw>
								@visualizer.drawTable2(@i + 1, @j + 1);
							</draw>
						</step>
					</while>
					
					<step
						id	= "ololo15"
						description	= "ololo15"
						level	= "-1"
					>
						<action>
							@i @= @i + 1;
						</action>
					</step>
				</while>
				
				<step
					id	= "ololo15"
					description	= "ololo15"
					comment-ru	= "Ура! Мы строили, строили и наконец построли! Всё необходимое для нахождения ответа есть!"
					level	= "1"
				>
					<action>
						@ready @= true;
					</action>
					<draw>
						@visualizer.drawTable2(@maximums.length, @depth.length % @pieceSize + 1);
					</draw>
				</step>
			</then>
		</if>
		
		<step
			id	= "buildingFinished"
			description	= "building finished"
			comment-ru	= "Можно приступать к обработке запроса. Для обработки запроса запустим поиск минимума в depth. Для этого разобьём отрезок на три части: левый «огрызок», правый «огразок» и то, что можно составить из целых кусочков. Отвтим на каждый запрос отдельно"
			level	= "1"			
		>
			<action>
				@left2 @= @first[@left - 1];
				@right2 @= @first[@right - 1];
				@leftPiece @= @left2 / @pieceSize;
				@rightPiece @= @right2 / @pieceSize;
				@i @= @left2;
				@ans1 @= -1;
				@ans2 @= -1;
				@ans3 @= -1;
			</action>
			<draw>
				@visualizer.drawMainArray();
				@visualizer.drawCellsForDFSWithoutTree(2 * @array.length - 1);
				@visualizer.redrawIndex();
				@visualizer.drawTable(@array.length, @array.length, -1, -1, -1, -1);
				@visualizer.drawTable2(@maximums.length, @depth.length % @pieceSize + 1);
			</draw>
		</step>
		
		<if
			id	= "atata1"
			description	= "LR"
			test	= "@left2 &gt; @right2"
			level	= "-1"
		>
			<then>
				<step
					id	= "atata2"
					description	= "atata2"
					level	= "-1"
				>
					<action>
						@tmp @= @left2;
						@left2 @= @right2;
						@right2 @= @tmp;
						@tmp @= @leftPiece;
						@leftPiece @= @rightPiece;
						@rightPiece @= @tmp;
					</action>
				</step>
			</then>
		</if>
		
		<step
			id	= "atata3"
			description	= "atata3"
		>
			<action>
			</action>
			<draw>
				@visualizer.debug("LP: ", @leftPiece);
				@visualizer.debug("RP: ", @rightPiece);
				@visualizer.debug("Left2: ", @left2);
				@visualizer.debug("Right2: ", @right2);
				@visualizer.debug("Left: ", @left);
				@visualizer.debug("Right: ", @right);
				@visualizer.debug("First: ", @first);
			</draw>
		</step>
		
		<if
			id	= "ololo19"
			description	= "ololo19"
			test	= "@leftPiece == @rightPiece"
			level	= "0"
			true-comment-ru	= "Какая досада. Обе границы запроса внутри маленького отрезка. Для каждой подстроки каждого отрезка посчитано, какой там минимим. Возьмём его как ответ"
			false-comment-ru	= "Посчитаем для левого, центральных и правого кусочков"
		>
			<then>
				<step
					id	= "ololo20"
					description	= "ololo20"
					level	= "-1"
				>
					<action>
						@i @= @left2;
						@ans @= 1000000;
						@index1 @= -1;
					</action>
				</step>
				
				<while
					id	= "ololo21"
					description	= "ololo21"
					test	= "@i &lt;= @right2"
					true-comment-ru	= "Продолжаем-с {0}"
					false-comment-ru	= "Всё ☹ {0}"
					level	= "-1"
					comment-args	= "new Integer(@i)"
				>
					<if 
						id = "ololo22"
						description	= "ololo22"
						test	= "@depth[@i] &lt; @ans"
						true-comment-ru	= "Улучшилось"
						false-comment-ru	= "Не улучшилось"
						level	= "-1"
					>
						<then>
							<step
								id	= "ololo23"
								description	= "ololo23"
							>
								<action>
									@ans @= @depth[@i];
									@index1 @= @i;
								</action>
							</step>
						</then>
					</if>
					<step
						id	= "ololo24"
						description	= "ololo24"
						level	= "-1"
					>
						<action>
							@i @= @i + 1;
						</action>
					</step>					
				</while>
				<step
					id	= "ololo25"
					description	= "ololo25"
					level	= "-1"
				>
					<action>
						@ans @= @array[@index[@index1]];
					</action>
				</step>
							
			</then>
			<else>
				<step
					id	= "ololo30"
					description	= "ololo30"
					level	= "-1"
				>
					<action>
						@log2 @= 0;
						@tmp @= @rightPiece - @leftPiece - 2;
						@i @= @left2;
						@ans1 @= 1000000;
						@ans2 @= 1000000;
						@ans3 @= 1000000;
						@index1 @= -1;
						@index2 @= -1;
						@index3 @= -1;
					</action>
				</step>
				<while
					id	= "ololo31"
					description	= "ololo31"
					test	= "@tmp != 0"
					true-comment-ru	= "Продолжаем, {0}, {1}"
					false-comment-ru	= "Всё, log = {0}"
					level	= "-1"
					comment-args	= "new Integer(@log2), new Integer(@tmp)"
				>
					<step
						id	= "ololo32"
						description	= "ololo32"
						level	= "-1"
						comment-ru	= "Оп оп"
					>
						<action>
							@log2 @= @log2 + 1;
							@tmp @= @tmp / 2;
						</action>
					</step>
				</while>
				
				<while
					id	= "ololo33"
					description	= "ololo33"
					test	= "@i &lt; (@leftPiece + 1) * @pieceSize"
					level	= "-1"
				>
					<if 
						id	= "ololo34"
						description	= "ololo34"
						test	= "@depth[@i] &lt; @ans1"
						level	= "-1"
					>
						<then>
							<step
								id	= "ololo35"
								description	= "ololo35"
								level	= "-1"
							>
								<action>
									@index1 @= @i;
									@ans1 @= @depth[@i];
								</action>
							</step>
						</then>
					</if>
					<step
						id	= "ololo355"
						description	= "ololo355"
						level	= "-1"
					>
						<action>
							@i @= @i + 1;
						</action>
					</step>
				</while>
				
				<step
					id	= "ololo36"
					description	= "ololo36"
					comment-ru	= "Максимум для левого куска найден — {0}"
					level	= "0"
					comment-args	= "new Integer(@array[@index[@index1]])"
				>
					<action>
						@i @= (@rightPiece - 1) * @pieceSize;
						@ans1 @= @array[@index[@index1]];
					</action>
				</step>
				
				<while
					id	= "ololo37"
					description	= "ololo37"
					test	= "@i &lt;= @right2"
					level	= "-1"
				>
					<if
						id	= "ololo38"
						description	= "ololo38"
						test	= "@depth[@i] &lt; @ans3"
						level	= "-1"
					>
						<then>
							<step
								id	= "ololo38"
								description	= "ololo39"
								level	= "-1"
							>
								<action>
									@ans3 @= @depth[@i];
									@index3 @= @i;
								</action>
							</step>
						</then>
					</if>
					<step
						id	= "ololo39"
						description	= "ololo39"
						level	= "-1"
					>
						<action>
							@i @= @i + 1;
						</action>
					</step>
				</while>
				
				<step
					id	= "ololo40"
					description	= "ololo40"
					level	= "0"
					comment-ru	= "Максимум для третьего куска найден — {0}. Для нахождения второго максимума обратимся в разреженную таблицу"
					comment-args	= "new Integer(@array[@index[@index3]])"
				>
					<action>
						@i @= (@leftPiece + 1) * @pieceSize;
						@ans3 @= @array[@index[@index3]];
					</action>	
				</step>
				
				<while
					id	= "ololo41"
					description	= "ololo41"
					test	= "@i &lt; @rightPiece * @pieceSize"
					true-comment-ru	= "А не второй ли максимум тут? {0}"
					false-comment-ru	= "Говно!"
					comment-args	= "new Integer(@i)"
					level	= "-1"
				>
					<if
						id	= "ololo42"
						description	= "ololo42"
						test	= "@depth[@i] &lt; @ans2"
						level	= "-1"
					>
						<then>
							<step
								id	= "ololo43"
								description	= "ololo43"
								level	= "-1"
							>
								<action>
									@ans2 @= @depth[@i];
									@index2 @= @i;
								</action>
							</step>
						</then>
					</if>
					<step
						id	= "ololo44"
						description	= "ololo44"
						level	= "-1"
					>
						<action>
							@i @= @i + 1;
						</action>
					</step>
				</while>
				
				<if
					id	= "ololo444"
					descrption	= "ololo444"
					test	= "@index2 != -1"
					level	= "-1"
				>
					<then>
						<step
							id	= "ololo45"
							description	= "ololo45"
							level	= "0"
							comment-ru	= "Найден и второй максимум — {0}"
							comment-args	= "new Integer(@array[@index[@index2]])"
						>
							<action>
								@ans2 @= @array[@index[@index2]];
							</action>
						</step>
					</then>
					<else>
						<step
							id	= "ololo445"
							description	= "445"
							level	= "0"
							comment-ru	= "Увы, второго максимума ввиду соседства левого и правого кусков, нет"
						>
							<action>
								@ans2 @= -1;
							</action>
						</step>
					</else>
				</if>

				<step
					id	= "ololo458"
					description	= "ololo458"
					level	= "0"
					comment-ru	= "Кандидаты: {0}, {1}, {2} :: {3}"
					comment-args	= "new Integer(@ans1), new Integer(@ans2), new Integer(@ans3)"
				>
					<action>
						@ans @= @ans1;
					</action>
				</step>
					
				
				<if
					id	= "ololo46"
					description	= "ololo46"
					test	= "@ans2 &gt; @ans"
					level	= "-1"
				>
					<then>
						<step
							id	= "ololo47"
							description	= "ololo47"
							level	= "-1"
						>
							<action>
								@ans @= @ans2;
							</action>
						</step>
					</then>
				</if>
				
				<if
					id	= "ololo48"
					description	= "ololo48"
					test	= "@ans3 &gt; @ans"
					level	= "-1"
				>
					<then>
						<step
							id	= "ololo49"
							description	= "ololo49"
							level	= "-1"
						>
							<action>
								@ans @= @ans3;
							</action>
						</step>
					</then>
				</if>
			</else>
		</if>
		
		<!--while
			id	= "ololo17"
			description	= "ololo17"
			test	= "@i &lt; @leftPiece * @pieceSize"
			level	= "-1"
		>
		</while-->
		
        <finish
            comment-ru="Задача решена! Максимум — {0}"
            comment-en="Problem solved"
			comment-args = "new Integer(@ans)"
        >
            <draw>
				@visualizer.debug("index: ", @index1);
				@visualizer.debug("ans: ", @ans);				
            </draw>
        </finish>
    </auto>
</algorithm>

