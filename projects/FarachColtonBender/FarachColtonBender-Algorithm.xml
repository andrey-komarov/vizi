<?xml version="1.0" encoding="UTF-8"?>

<!--
    "FindMaximum" algoritm description (example)
    Version: $Id: FindMaximum-Algorithm.xml,v 1.4 2005/02/28 11:47:43 geo Exp $
-->

<algorithm>
	<variable 
		description	= "Экземпляр апплета"
		name		= "visualizer"
		type		= "FarachColtonBenderVisualizer"
		value		= "null"
	/>

	<variable
		description	= "Основной массив"
		name		= "array"
		type		= "int[]"
		value		= "new int[]{3, 8, 10, 4, 23}"
	/>

	<variable
		description	= "Количество обработанных вершин в построении декартова дерева"
		name		= "verticesPassed"
		type		= "int"
		value		= "0"
	/>	

	<variable
		description	= "Стек"
		name		= "stack"
		type		= "int[]"
		value		= "new int[5]"
	/>

	<variable
		description	= "Ещё стек"
		name		= "stack2"
		type		= "int[]"
		value		= "new int[5]"
	/>

	<variable
		description	= "Размер стека. Внезапно"
		name		= "stackSize"
		type		= "int"
		value		= "0"
	/>

	<variable
		description	= "Счётчик цикла"
		name		= "i"
		type		= "int"
		value		= "0"
	/>

	<variable
		description	= "Левый сын в декартовом дереве"
		name		= "leftSon"
		type		= "int[]"
		value		= "new int[5]"
	/>

	<variable
		description	= "Правый сын в декартовом дереве"
		name		= "rightSon"
		type		= "int[]"
		value		= "new int[5]"
	/>

	<variable
		description	= "oldStackSize"
		name		= "oldStackSize"
		type		= "int"
		value		= "-1"
	/>

	<variable
		desctription	= "Врéменная переменная"
		name		= "tmp"
		type		= "int"
		value		= "0"
	/>

	<variable
		description	= "Номер вершины в DFS"
		name		= "index"
		type		= "int[]"
		value		= "new int[11]"
	/>
	
	<variable
		description	= "Глубина в DFS"
		name		= "depth"
		type		= "int[]"
		value		= "new int[11]"
	/>

	<variable
		description	= "Корень дерева"
		name		= "root"
		type		= "int"
		value		= "-1"
	/>

	<variable
		description	= "Позиция в массиве обхода DFS"
		name		= "pos"
		type		= "int"
		value		= "-1"
	/>

	<variable
		description	= "Сыновей пройдено"
		name	= "passed"
		type	= "int[]"
		value	= "null"
	/>

	<toString>
		return "";
	</toString>

	<auto id="Main" description="Ищет максимум на отрезке в массиве">
        <start
            comment-ru	= "Инициализируем массив"
            comment-en	= "There is a array on display"
        >
	<draw>
		@visualizer.clear();
		@visualizer.drawMainArray();
		@visualizer.initArrays();
	</draw>
        </start>
		
        <step
		id		= "Begin"
		description	= "Start of cycle"
		comment-ru	= "Построим декартово дерево из пар {0}. Воспользуемся алгоритмом построения декартова дерева с отсоритированными по x ключами за линейное время. Для этого будем хранить стек лежащих на правом пути вершин. При добавлении очередного элемента выкидываем из стека элементы с бóльшими ключами y, меньшие , после чего к вершине стека справа подвесим добавляемый элемент."
		comment-args	= "FarachColtonBenderVisualizer.treeAsString(@array)"
	>
	<action>
		@i @= 0;
		@stack @= new int[@array.length];
		@stackSize @= 0;
	</action>
	</step>

<!-- ***************************************************************** -->
<!-- ********************** Построение дерева ************************ -->
<!-- ***************************************************************** -->

	<while
		id		= "CartesianTreeLoop"
		description	= "Cycle over elements to build cartesian tree"
		test		= "@i &lt; @array.length"
		true-comment-ru	= "Добавим в дерево справа элемент {0}. Выкинем все меньшие {0} элементы."
		false-comment-ru	= "Дерево построено!"
		comment-args	= "new Integer((@i &lt; @array.length) ? (@array[@i]) : 0)"
	>

		<step
			id	= "BackupStackSize"
			description	= "Backup stack size"
			level	= "-1"			
		>
		<action>
			@oldStackSize @= @stackSize;
		</action>
		</step>

		<while
			id	= "dropSmallElements"
			description	= "Drop all elements above a[i]"
			test	= "@stackSize &gt; 0 &amp;&amp; @array[@i] > @array[@stack[@stackSize - 1]]"
			true-comment-ru	= "{0} &lt; {1}. Выкидываем {0}."
			false-comment-ru	= "Останавливаемся."
			comment-args	= "new Integer(@stackSize == 0 ? 0: (@array[@stack[@stackSize - 1]])), new Integer(@array[@i])"
		>
			<step
				id	= "decrementStackSize"
				description	= "decrementStackSize"
			>
			<action>
				@stackSize @= @stackSize - 1;
			</action>
			<draw>
				@visualizer.drawCartesianTree(@i, @stackSize);
			</draw>
			</step>
		</while>

		<if
			id		= "checkHasRightSon"
			description	= "check for new right son"
			test		= "@stackSize != 0"
			true-comment-ru	= "Чпок!"
			false-comment-ru	= "Пыщь!"
			level		= "0"
		>
		<then>
			<step
				id	= "rightSonAssignment"
				description	= "right son assignment"
				level = "-1"
			>
			<action>
				@rightSon[@stack[@stackSize - 1]] @= @i;
			</action>
			</step>
		</then>
		<else>
		</else>
		</if>

		<if
			id		= "checkHasLeftSon"
			description	= "check for new left son"
			test		= "@oldStackSize != @stackSize"
			true-comment-ru	= "Ололо!"
			false-comment-ru	= "Атата!"
			level		= "0"
		>
		<then>
			<step
				id	= "leftSonAssignment"
				description	= "left son assignment"
				level	= "-1"
			>
			<action>
				@leftSon[@i] @= @stack[@stackSize];
			</action>
			</step>
		</then>
		<else>
		</else>
		</if>

		<step
			id		= "pushElementToStack"
			description	= "push element to stack"
			comment-ru	= "Добавим элемент {0} в стек"
			comment-args	= "new Integer(@array[@i])"
		>
		<action>
			@stack[@stackSize] @= @i;
			@stackSize @= @stackSize + 1;
		</action>
		<draw>
			@visualizer.drawCartesianTree(@i + 1, @stackSize);
		</draw>
		</step>

		<step
			id		= "CycleStep"
			description	= "Cycle step"
			level		= "-1"
		>
		<action>
			@i @= @i + 1;
		</action>
		</step>

	</while>

	<step
		id	= "TreeBuilt"
		desription	= "Now we have the tree"
		comment-ru	= "Теперь у нас есть построеное дерево"
	>
	<draw>
		@visualizer.drawCartesianTree(@array.length, 0);
	</draw>
	</step>

<!-- ******************************************************************** -->
<!-- *************************** Обход дерева *************************** -->
<!-- ******************************************************************** -->
	
	<step
		id	= "DFSComment"
		description	= "DFSCommnet"
		comment-ru	= "Теперь обойдём дерево обходом в глубину. На каждом шаге будем запоминать своё местоположение и глубину"
	>
	<action>
		@stackSize @= 1;
		@root @= @stack[0];
		@stack @= new int[2 * @array.length + 1];
		@stack[0] @= @root;
		@index[0] @= @root;
		@depth[0] @= 1;
		@pos @= 1;
	</action>
	<draw>
		@visualizer.debug("root", @root);
		@visualizer.debug("left", @leftSon);
		@visualizer.debug("right", @rightSon);
		@visualizer.drawCellsForDFS(0, -1);
	</draw>
	</step>

	<step
		id	= "ololo2"
		description	= "ololo2"
	>
		<action>
		</action>
		<draw>
			@visualizer.drawCellsForDFS(1, @root);
		</draw>
	</step>

	<while
		id	= "DFS"
		description	= "Traversal over tree"
		test		= "@stackSize &gt; 0"
		true-comment-ru	= "Обрабатывыем вершину {0}({1})"
		false-comment-ru	= "Обход закончен"
		comment-args	= "new Integer(1 + (@stackSize == 0 ? 0 : @stack[@stackSize - 1])), new Integer(@array[@stackSize == 0 ? 0 : @stack[@stackSize - 1]])"
	>
	
		<if
			id	= "GoLeft"
			description	= "Try to go left"
			test	= "@passed[@stack[@stackSize - 1]] == 0 &amp;&amp; @leftSon[@stack[@stackSize - 1]] != -1"
			true-comment-ru	= "Идём влево"
			false-comment-ru	= "Не идём влево"
			level	= "-1"
		>
			<then>
				<step
					id	= "GoGoLeft"
					description	= "go left"
					comment-ru	= "Идём влево"
					level = "0"
				>
					<action>
						@stack[@stackSize] @= @leftSon[@stack[@stackSize - 1]];
						@passed[@stack[@stackSize - 1]] @= @passed[@stack[@stackSize - 1]] + 1;
						@depth[@pos] @= @depth[@pos - 1] + 1;
						@index[@pos] @= @leftSon[@stack[@stackSize - 1]];
						@pos @= @pos + 1;
						@stackSize @= @stackSize + 1;
					</action>
					<draw>
						@visualizer.drawCellsForDFS(@pos, @stack[@stackSize - 1]);
					</draw>
				</step>
			</then>
			<else>
				<if
					id	= "advancePointer"
					description	= "advancePointer"
					level	= "-1"
					test	= "@leftSon[@stack[@stackSize - 1]] == -1"					
				> 
					<then>
						<step
							id	= "advancePointer1"
							description	= "advancePointer1"
							level	= "-1"							
						>
							<action>
								@passed[@stack[@stackSize - 1]] @= @passed[@stack[@stackSize - 1]] + 1;
							</action>
						</step>
					</then>
					<else>
					</else>				
				</if>
				
				<if
					id	= "GoRight"
					description	= "Try to go right"
					test	= "@passed[@stack[@stackSize - 1]] == 1 &amp;&amp; @rightSon[@stack[@stackSize - 1]] != -1"
					level	= "-1"
				>
					<then>
						<step
							id	= "GoGoRight"
							description	= "GoGoRight"
							comment-ru	= "Идём вправо"
						>
							<action>
								@stack[@stackSize] @= @rightSon[@stack[@stackSize - 1]];
								@passed[@stack[@stackSize - 1]] @= @passed[@stack[@stackSize - 1]] + 1;
								@depth[@pos] @= @depth[@pos - 1] + 1;
								@index[@pos] @= @rightSon[@stack[@stackSize - 1]];
								@pos @= @pos + 1;
								@stackSize @= @stackSize + 1;
							</action>
							<draw>
								@visualizer.drawCellsForDFS(@pos, @stack[@stackSize - 1]);
							</draw>
						</step>
					</then>
					<else>
						<if
							id	= "goUp"
							description	= "check if we are not root"
							test	= "@stackSize &gt; 1"
							level	= "-1"
						>
							<then>
								<step
									id	= "goUp"
									description	= "processing of vertex finished"
									comment-ru	= "Поднимаемся наверх"
									level	= "0"
								>
									<action>
										@index[@pos] @= @stack[@stackSize - 2];
										@depth[@pos] @= @depth[@pos - 1] - 1;
										@pos @= @pos + 1;
										@stackSize @= @stackSize - 1;
									</action>
									<draw>
										@visualizer.drawCellsForDFS(@pos, @stack[@stackSize - 1]);
									</draw>
								</step>
							</then>
							<else>
								<step
									id	= "endOfDFS"
									description	= "the end of DFS"
									level	= "-1"
								>
									<action>
										@stackSize @= @stackSize - 1;
									</action>
								</step>
							</else>
						</if>						
					</else>
				</if>
			</else>
		</if>
	</while>

	<step
		id	= "traversalFinished"
		description	= "cleanup after traversal"
		comment-ru	= "Отныне дерево нам больше не понадобится"
	>
		<action>			
		</action>
		<draw>
			@visualizer.drawCellsForDFS(@pos, -1);
			@visualizer.drawCartesianTree(0, 0);
		</draw>
	</step>

<!--		
		<while
			id = "Loop"
			description = "Cycle"
			test = "@i &lt; @matrix.length - 1"
			level = "-1"
		>
		    <step 
				id = "InitLocalMin"
				description = "Initialization of local minimum"
				level = "-1"
			>
				<action>
					@localMinimum @= new int[@matrix.length];
					@j @= 0;
				</action>
			</step>
			
            <while
				id = "Loop"
				description = "Cycle"
				test = "@j &lt; @matrix.length"
				level = "-1"
			>
				<step
					id = "InitOfOneEl"
					description = "Initialization of one element"
					level = "-1"
				>
					<action>
						@localMinimum[@j] @= @i + 1;
						@j @= @j + 1;
					</action>
				</step>
			</while>
			
			<step
				id="GoOn"
            	description="Moving to next row"
            	comment-ru="Помечаем новую строку, начинаем новую итерацию"
            	comment-en="Moving to the next row"
        	>
	        	<draw>
	           		@visualizer.drawMatrix();
					@visualizer.drawArrays();
            	</draw>
            	<action>
            		@i @= @i + 1;
					@currentRow @= @i;
					@currentMinimum @= 0;
					@j @= 0;
					@checkedRows @= new boolean[@matrix.length];
					@checkedColumns @= new boolean[@matrix.length];
					@checkedRows[@i] @= true;
					@lastRow @= @i;
					@br @= true;
            	</action>
			</step>

		<while
			id = "LongLoop"
			description = "Searching for new row partner"
			test = "@br"
			level = "-1"
		>
			<step
				id = "InitLoopVar"
				description = "Initialization of loop variable"
				level = "-1"
			>
				<action>
					@j @= 0;
					@globalMinimumI @= -1;
					@globalMinimumJ @= -1;
				</action>
			</step>

			<while
				id = "SearchingForMinLoop"
				description = "Searching for minimum"
				test = "@j &lt; @matrix.length"
				level = "-1"
			>
				<if
					id = "TestForMin"
					description = "Testing next element for minimum"
					test = "(!@checkedColumns[@j]) &amp;&amp; (@matrix[@lastRow][@j] &lt; @matrix[@localMinimum[@j]][@j])"
					true-comment-ru = "Обновляем минимум номер {0}"
					true-comment-en = "Updating minimum number {0}"
					false-comment-ru = "Не обновляем минимум номер {0}"
					false-comment-en = "Don't updating minimum number {0}"
					comment-args = "new Integer(@j + 1)"

				>
					<draw>
						@visualizer.drawMatrix();
						@visualizer.drawArrays();
					</draw>
					<then>
						<step
							id = "UpdateMin"
							description = "Updating minimum"
							level = "-1"
						>
							<action>
								@localMinimum[@j] @= @lastRow; 
							</action>
						</step>
					</then>
					<else>
					</else>	
				</if>            
				
				<if
					id = "TestColForFree"
					description = "Testing current element for freedom"
					test = "(!@checkedColumns[@j])"
					true-comment-ru = "Проверяем текущий элемент на минимальность"
					true-comment-en = "Checking current element for minimum"
					false-comment-ru = "Не проверяем текущий элемент на минимальность"
					false-comment-en = "Don't Checking current element for minimum"
				>
					<draw>
						@visualizer.drawArrays();
					</draw>
					<then>
						<if
							id = "TestForMin"
							description = "Testing for minimum"
							test = "(@globalMinimumJ == -1) || (@matrix[@localMinimum[@j]][@j] &lt; @matrix[@globalMinimumI][@globalMinimumJ])"
							level = "-1"
						>
						<then>
							<step
								id = "Assign"
								description = "Assignment"
								comment-ru = "Обновляем минимум"
								comment-en = "Updating minimum"
							>
								<draw>
									@visualizer.drawMatrix();
									@visualizer.drawArrays();
								</draw>
								<action>
									@globalMinimumJ @= @j;
									@globalMinimumI @= @localMinimum[@j];
								</action>
							</step>
						</then>
						</if>	
					</then>	
				</if>            
				
				<step
					id = "IncreaseJ"
					description = "Increasing counter"
					level = "-1"
				>
					<action>
						@j @= @j + 1;
					</action>
				</step>
			</while>	
			
            		<step
						id = "InitLoopVars"
						description = "Initializing variables for new loops"
						level = "-1"
					>
						<action>
							@di @= 0;
							@dj @= 0;
							@diff @= @matrix[@globalMinimumI][@globalMinimumJ];
							
						</action>
					</step>
					<while
						id = "LoopForI"
						description = "Loor for i"
						test = "@di &lt; @matrix.length"
						level = "-1"
					>
					<while
						id = "LoopForJ"
						description = "Loor for j"
						test = "@dj &lt; @matrix.length"
						level = "-1"
					>   
						<if
							id = "checkForChecking"
							description = "Checking cell for beeing checked"
							test = "(@checkedColumns[@dj])"
							level = "-1"

						>
					    <then>
							<step
								id = "Decrease"
								description = "Decreasing element"
								level = "-1"
							>
								<action>
									@matrix[@di][@dj] @= @matrix[@di][@dj] + @diff;
								</action>
							</step>
						</then>
						</if>
						<if
							id = "checkForChecking"
							description = "Checking cell for beeing checked"
							test = "(@checkedRows[@di])"
							level = "-1"

						>
					    <then>
							<step
								id = "Decrease"
								description = "Decreasing element"
								level = "-1"
							>
								<action>
									@matrix[@di][@dj] @= @matrix[@di][@dj] - @diff;
								</action>
							</step>
						</then>
						</if>
						<step
								id = "incDj"
								description = "Increasing dj"
								level = "-1"
							>
								<action>
									@dj @= @dj + 1;
								</action>
						</step>
						
					</while>
					<if
								id = "ChangeDRows"
								description = "Changing deltaRows"
								test = "(@checkedRows[@di])"
								level = "-1"
							>
								<then>
								<step
									id = "chengeDRow"
									description = "Change one element"
									level = "-1"
								>
									<action>
										@rowChange[@di] @= @rowChange[@di] + @diff;
									</action>
								</step>
								</then>
							</if>
						
                    <if
								id = "ChangeDColumns"
								description = "Changing deltaColumns"
								test = "(@checkedColumns[@di])"
								level = "-1"
							>
								<then>
								<step
									id = "chengeDColumn"
									description = "Change one element"
									level = "-1"
								>
									<action>
										@columnChange[@di] @= @columnChange[@di] - @diff;
									</action>
								</step>
								</then>
							</if>
					<step
						id = "incDi"
						description = "Increasing di"
						level = "-1"
					>
						<action>
							@di @= @di + 1;
							@dj @= 0;		
						</action>
					</step>
						



					
					</while>
			    <step
						id = "checkSomething"
						description = "Initializing variables for new loops"
						level = "-1"
					>
						<action>
							@checkedColumns[@globalMinimumJ] @= true;
							
						</action>
					</step>
					
				<if
								id = "if"
								description = "if"
								test = "@used[@globalMinimumJ]"
								level = "-1"
							>
							<then>
								<step
									id = "step"
									description = "step"
									level = "-1"
								>
									<action>
										@checkedRows[@cPartner[@globalMinimumJ]] @= true;
									</action>
								</step>
				            </then>
				            </if>
			<if
				id = "OutIf"
				description = "Checking is it possible to come out of loop"
				test = "!@used[@globalMinimumJ]"
				level = "-1"
			>
				<then>
					<step
						id = "GoingOut"
						description = "Going out of loop"
						comment-ru = "Свободный столбец найден, выходим из цикла"
						comment-en = "Free column were found, going out of loop"
					>
						<draw>
							@visualizer.drawMatrix();
							@visualizer.drawArrays();
						</draw>
						<action>
							@br @= false;
						</action>
					</step>
				</then>
				<else>
					<step
						id = "NotGoingOut"
						description = "Not going out of loop"
						comment-ru = "Свободный столбец не найден, не выходим из цикла"
						comment-en = "Free column were not found, not going out of loop"
					>
						<draw>
							 @visualizer.drawMatrix();
							@visualizer.drawArrays();
							
						</draw>
						<action>
							@lastRow @= @cPartner[@globalMinimumJ];
						</action>
					</step>
		  		</else>
			</if>		
			<step
				id = "DrawAll"
				description = "Drawing all objects"
				comment-ru = "Обновляем значения, вычитаем минимальный элемент"
				comment-en = "Updating matrix and arrays, decreasing all on minimal element"
			>
				<draw>
					@visualizer.drawMatrix();
					@visualizer.drawArrays();
				</draw>
				<action>
					@i @= @i;
				</action>
			</step>
			
			
		</while>
		<while
			id = "recaclulatingPartners"
			description = "Recalculating partners for some rows"
			test = "@globalMinimumI != @i"
			level = "-1"
		>
			<step
				id = "recalcPartnerForLastRow"
				description = "Recalculate partner for last row"
				comment-ru = "Пересчитываем партнера строки номер {0}"
				comment-en = "Recalculate partner for row number {0}"
				comment-args = "new Integer(@globalMinimumI + 1)"
			>
				<draw>
					@visualizer.drawMatrix();
					@visualizer.drawArrays();
				</draw>
				<action>
					@swp @= @partner[@globalMinimumI];
					@partner[@globalMinimumI] @= @globalMinimumJ;
					@cPartner[@globalMinimumJ] @= @globalMinimumI;
					@checkedRows[@globalMinimumI] @=false;
					@checkedColumns[@globalMinimumJ] @= false;
					@used[@globalMinimumJ] @= true;
					@globalMinimumJ @= @swp;
				</action>
			</step>
			
			<step
				id = "initDi"
				description = "Initialize di"
				level = "-1"
			>
				<action>
					@di @= 0;
				</action>
			</step>

			<while 
				id = "SearchMin"
				description = "Searching for partner for globalMinimumJ"
				test = "@di &lt; @matrix.length"
				level = "-1"
			>
				<if
					id = "Check"
					description = "Check"
					test = "(@checkedRows[@di]) &amp;&amp;((!@checkedColumns[@globalMinimumJ] == false) || (@matrix[@di][@globalMinimumJ] &lt; @matrix[@globalMinimumI][@globalMinimumJ]))"
  					level = "-1"
				>
					<then>
					<step
						id = "reCalc"
						description = "reCalc"
						level = "-1"
					>
						<action>
							@globalMinimumI @= @di;
						</action>
					</step>
					</then>
				</if>                       
				<step
					id = "aaaaa"
					description = "aaaaaaa"
					level = "-1"
				>
					<action>
						@di @= @di + 1;
					</action>
				</step>
			</while>
		</while>
		<step
			id = "lastRecalc"
			description = "Last recalculation"
			comment-ru = "Пересчитываем партнера строки номер {0}"
			comment-en = "Recalculate partner for row number {0}"
			comment-args = "new Integer(@globalMinimumI + 1)"
		>
			<draw>
				@visualizer.drawMatrix();
			</draw>
			<action>
				@partner[@globalMinimumI] @= @globalMinimumJ;
				@cPartner[@globalMinimumJ] @= @globalMinimumI;
				@used[@globalMinimumJ] @= true;	
				@checkedColumns @= new boolean[@matrix.length];
				@checkedRows @= new boolean[@matrix.length];
			</action>
		</step>
	</while>	

-->	
        <finish
            comment-ru="Задача о назначениях решена {0}"
            comment-en="Problem solved"
		comment-args = "new Integer(@i)" 
        >
            <draw>
                <!-- @visualizer.drawMatrix(); -->
            </draw>
        </finish>
    </auto>
</algorithm>


